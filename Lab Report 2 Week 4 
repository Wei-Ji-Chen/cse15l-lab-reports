
## **Lab Report 2** 

--- 

In this lab report, I will introduce the code changes made to the MarkdownParse file in order for three test files that did not originally pass the code in MarkdownParse to pass. We will be analyzing the three failure inducing input (FII) and the  subsequent changes made to the MarkdownParse code in order to have the test files pass successfully. 

--------

### First FII  ###
---

_Test File of the FII_


_Symptom of FII_


_Solution to FII_

![Image](labreport2firstpic.png)

------

### Second FII ### 
---


The second FII concerns the code looking and returning the name of an image, even though the code was designed to only identify links. 

_Test File of the FII_

Test file of the 'image' FII: [Link](https://github.com/Wei-Ji-Chen/markdown-parser/blob/main/test4-file.md)


_Symptom of FII_

This FII led to the following output: 

> [image.png]

_Solution to FII_

The changes in the code made to fix the bug causing the FII to not run successfully is highlighted in green in the image below. 

![Image](labreport2secondpic.png)

The failure inducing input in this case is an image, specifically concering the coding syntax of inserting an image. The link to the test file contains the code that inserts an image in the file. The original MarkdownParse file doesn't check for the exclamation mark "!", which indicates the code for inserting an image. Thus, it returns the output [image.png], as the MarkdownParse code is reading that as if it's a link. Therefore, this shows the code is unable to differentiate between code written for links and code written for an image. Thus, in order to fix this, an if statement is written to check for the exclamation mark before the "[" printing to ensure that the link is not for an image. This way, if it detects the "!", the loop breaks, otherwise, it continues. 

--------

### Third FII ### 

--------

_Test File of the FII_

_Symptom of FII_

_Solution to FII_
